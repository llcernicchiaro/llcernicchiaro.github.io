{"version":3,"sources":["Header.js","PlayerForm.js","PlayerItem.js","Players.js","PlayersList.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","index_es","icon","PlayerForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","age","position","HandleChange","bind","assertThisInitialized","event","_event$target","target","value","setState","defineProperty","Form_default","Group","Label","Control","type","placeholder","onChange","as","controlId","Button_default","variant","Component","PlayerItem","props","player","id","ButtonGroup_default","aria-label","Players","PlayerList","players","playersComponent","map","src_PlayerItem","key","Table_default","striped","bordered","hover","React","library","add","faFutbol","faCheckCircle","faTimesCircle","faPen","faTrashAlt","App","showForm","changeFormState","prevState","buttonText","Card_default","src_Header","Body","Container_default","Row_default","Col_default","onClick","src_PlayerForm","xs","PlayersList","rel","href","integrity","crossorigin","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d935408b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Header\">\r\n            <h1 className=\"pt-2\"><FontAwesomeIcon icon=\"futbol\"/> Organizador de Equipes <FontAwesomeIcon icon=\"futbol\"/></h1>\r\n            <h4 className=\"pb-2\">Organize a sua equipe de pelada com seus amigos!</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass PlayerForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            age: \"\",\r\n            position: \"\"\r\n        }\r\n        this.HandleChange = this.HandleChange.bind(this)\r\n    }\r\n\r\n    HandleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"pt-3\">\r\n                <Form.Group>\r\n                    <Form.Label>Nome</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Nome\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.HandleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Idade</Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"age\"\r\n                        value={this.state.age}\r\n                        onChange={this.HandleChange}\r\n                    >\r\n                        <option value=\"19\">19</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"21\">21</option>\r\n                        <option value=\"22\">22</option>\r\n                        <option value=\"23\">23</option>\r\n                        <option value=\"24\">24</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"26\">26</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Posição</Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"position\"\r\n                        value={this.state.position}\r\n                        onChange={this.HandleChange}\r\n                    >\r\n                        <option value=\"goleiro\">goleiro</option>\r\n                        <option value=\"zagueiro\">zagueiro</option>\r\n                        <option value=\"lateral\">lateral</option>\r\n                        <option value=\"meio-campo\">meio-campo</option>\r\n                        <option value=\"atacante\">atacante</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button variant=\"success\" type=\"submit\">\r\n                    Confirmar\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerForm;\r\n","import React, { Component } from 'react';\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction PlayerItem(props) {\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.player.id}\r\n            </td>\r\n            <td>\r\n                {props.player.name}\r\n            </td>\r\n            <td>\r\n                {props.player.age}\r\n            </td>\r\n            <td>\r\n                {props.player.position}\r\n            </td>\r\n            <td>\r\n                {/* <FontAwesomeIcon icon=\"check-circle\"/>\r\n                <FontAwesomeIcon icon=\"times-circle\"/> */}\r\n                <ButtonGroup aria-label=\"Basic example\">\r\n                    <Button variant=\"success\">\r\n                        <FontAwesomeIcon icon=\"pen\" />\r\n                    </Button>\r\n                    <Button variant=\"secondary\">\r\n                        <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </Button>\r\n                </ButtonGroup>\r\n\r\n\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default PlayerItem;\r\n","const Players = [\r\n    {\r\n        id: 1,\r\n        name: \"Lorenzo\",\r\n        age: \"21\",\r\n        position: \"zagueiro\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Matheus\",\r\n        age: \"19\",\r\n        position: \"atacante\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Lucas\",\r\n        age: \"20\",\r\n        position: \"lateral\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Rafael\",\r\n        age: \"21\",\r\n        position: \"meio-campo\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Lúcio\",\r\n        age: \"29\",\r\n        position: \"zagueiro\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Pedro\",\r\n        age: \"22\",\r\n        position: \"goleiro\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Henrique\",\r\n        age: \"23\",\r\n        position: \"goleiro\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Luan\",\r\n        age: \"25\",\r\n        position: \"atacante\"\r\n    }\r\n]\r\n\r\nexport default Players;","import React from 'react';\r\nimport PlayerItem from './PlayerItem';\r\nimport Players from './Players';\r\n\r\n// Bootstrap React\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nclass PlayerList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            players: Players\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const playersComponent = this.state.players.map(player => <PlayerItem key={player.id} player={player} />);\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Nome</th>\r\n                        <th>Idade</th>\r\n                        <th>Posição</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                        {playersComponent}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerList;\r\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport PlayerForm from './PlayerForm';\nimport PlayersList from './PlayersList';\n\n// Bootstrap React\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\n//FontAwesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faFutbol, faCheckCircle, faTimesCircle, faPen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n//CSS\nimport './App.css';\n\nlibrary.add(faFutbol, faCheckCircle, faTimesCircle, faPen, faTrashAlt);\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      showForm: false\n    }\n    this.changeFormState = this.changeFormState.bind(this);\n  }\n\n  changeFormState() {\n    this.setState(prevState => {\n      return {\n        showForm: !prevState.showForm\n      }\n    })\n  }\n\n  render() {\n    let buttonText = this.state.showForm ? \"Cancelar\" : \"Adicione um Jogador\"\n\n    return (\n      <div className=\"App\">\n        <Card className=\"main\">\n          <Card.Header className=\"header\">\n            <Header />\n          </Card.Header>\n          <Card.Body className=\"PrincipalContent\">\n            <Container>\n              <Row>\n                <Col>\n                  <Button variant=\"success\" onClick={this.changeFormState}>{buttonText}</Button>\n                  {this.state.showForm ?\n                    <PlayerForm /> :\n                    \"\"\n                  }\n                </Col>\n                <Col xs={8}>\n                  <PlayersList />\n                </Col>\n              </Row>\n            </Container>\n          </Card.Body>\n        </Card>\n\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossorigin=\"anonymous\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}